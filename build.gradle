group 'com.apurebase'
version '0.9.0'

buildscript {

    ext {
        // Dependencies
        kotlin_version = '1.3.50'
        coroutine_version = '1.3.2'

        jackson_version = '2.9.7'
        caffeine_version = '2.8.0'

        // Test-Dependencies
        kotlin_html_version = '0.6.12'
        netty_version = '4.1.42.Final'
        junit_version = '4.12'
        kluent_version = '1.56'
        hamcrest_version = '2.2'

        // Gradle Plugin, ... versions
        jmhGradlePlugin_version = '0.5.0'
        jmh_version = '1.21'
        coverallsGradlePlugin_version = '2.8.4'
        bintrayGradlePlugin_version = '1.8.4'
        jacoco_version = '0.8.5'

    }

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "me.champeau.gradle:jmh-gradle-plugin:$jmhGradlePlugin_version"
        classpath "gradle.plugin.com.github.kt3k.coveralls:coveralls-gradle-plugin:$coverallsGradlePlugin_version"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$bintrayGradlePlugin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'me.champeau.gradle.jmh'

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: "com.jfrog.bintray"

repositories {
    mavenCentral()
    jcenter()
    maven {
        url "http://dl.bintray.com/kotlin/kotlin-eap"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"

    compile "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"

    compile "com.github.ben-manes.caffeine:caffeine:$caffeine_version"

    testCompile "org.jetbrains.kotlinx:kotlinx-html-jvm:$kotlin_html_version"
    testCompile "io.netty:netty-all:$netty_version"

    testCompile "junit:junit:$junit_version"
    testCompile "org.hamcrest:hamcrest:$hamcrest_version"
    testCompile "org.amshove.kluent:kluent:$kluent_version"
}

jmh {
    jmhVersion = jmh_version
    duplicateClassesStrategy = 'WARN'
}


coveralls {
    sourceDirs += ['src/main/kotlin']
}

jacoco {
    toolVersion = jacoco_version
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}

jacocoTestReport {
    reports {
        xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')

    publish = true
    publications = ['MyPublication']
    configurations = ['archives']
    pkg {
        repo = 'apurebase'
        name = 'kgraphql'
        licenses = ['MIT']
        vcsUrl = 'git@github.com:aPureBase/KGraphQL.git'
        websiteUrl = 'https://github.com/aPureBase/KGraphQL'
        issueTrackerUrl = 'https://github.com/aPureBase/KGraphQL/issues'
        version {
            name = project.version
            released = new Date()
        }
    }

    publishing {
        publications {
            MyPublication(MavenPublication) {
                from components.java
                groupId project.group
                artifactId 'kgraphql'
                artifact sourcesJar
                version version
            }
        }
    }
}



wrapper {
    gradleVersion = '5.6.3' //version required
}
